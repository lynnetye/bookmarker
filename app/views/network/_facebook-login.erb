<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response, performLogin) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected' && performLogin) {
      // Logged into your app and Facebook.
      logUserInViaFacebookAPI(response);
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
        console.log('you are not authorized');
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response, true);
    });
  }

  window.fbAsyncInit = function() {
    FB.init({
      appId      : '760424657411595',
      cookie     : true,  // enable cookies to allow the server to access
                          // the session
      xfbml      : true,  // parse social plugins on this page
      version    : 'v2.2' // use version 2.2
    });

    // Now that we've initialized the JavaScript SDK, we call
    // FB.getLoginStatus().  This function gets the state of the
    // person visiting this page and can return one of three states to
    // the callback you provide.  They can be:
    //
    // 1. Logged into your app ('connected')
    // 2. Logged into Facebook, but not your app ('not_authorized')
    // 3. Not logged into Facebook and can't tell if they are logged into
    //    your app or not.
    //
    // These three cases are handled in the callback function.

    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = '//connect.facebook.net/en_US/sdk.js';
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function logUserInViaFacebookAPI(data) {
    console.log('Welcome!  Fetching your information.... ');
    var accessToken = data.authResponse.accessToken,
        fbID = data.authResponse.userID;

    FB.api('/me', function (response) {
      console.log('Successful login for: ' + response.name);

      // ADD AJAX CALL TO LOGIN WITH Facebook
      var request = $.ajax({
        url: '/facebook-login',
        type: 'POST',
        data: { first: response.first_name,
                last:  response.last_name,
                email: response.email,
                facebook_id: response.id,
                accessToken: accessToken,
                fb_id: fbID
              },
        dataType: 'json'
      });

      request.done(function (response){
        if (response.success) {
          window.location = '/bookmarks';
        }
      });
    });

    FB.api('/me/picture', function (response) {
      var pictureUrl = response.data.url,
          request = $.ajax({
            url: '/profile-picture',
            type: 'GET',
            data: { url: pictureUrl },
            dataType: 'json'
          });

      request.done(function(response){
        console.log("Profile picture saved successfully")
      })
    });
  }
</script>

<!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

